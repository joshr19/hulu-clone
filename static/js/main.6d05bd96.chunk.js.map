{"version":3,"sources":["Header.js","requests.js","Nav.js","VideoCard.js","axios.js","Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","API_KEY","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTV","Nav","setSelectedOption","onClick","requests","VideoCard","forwardRef","ref","movie","backdrop_path","poster_path","line","element","truncateText","text","overview","title","original_name","media_type","release_date","first_air_date","ThumbUpSharp","vote_count","instance","axios","create","baseURL","Results","selectedOption","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d05bd96.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header__icons\">\r\n                <div className=\"header__icon header__icon--active\">\r\n                <HomeIcon />\r\n                <p>Home</p>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                <FlashOnIcon />\r\n                <p>Trending</p>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                <LiveTvIcon />\r\n                <p>Verified</p>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                <VideoLibraryIcon />\r\n                <p>Collections</p>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                <SearchIcon />\r\n                <p>Search</p>\r\n                </div>\r\n                <div className=\"header__icon\">\r\n                <PersonOutlineIcon />\r\n                <p>Account</p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            <img src=\"https://press.hulu.com/wp-content/uploads/2020/02/hulu-white.png\" alt=\"\" />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const API_KEY = '20eae50fb7aed4f413daf14c0e783794';\r\n\r\nexport default{\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n    fetchSciFi: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n    fetchWestern: `/discover/movie?api_key=${API_KEY}&with_genres=37`,\r\n    fetchAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n    fetchTV: `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\r\n\r\n};","import React from \"react\";\r\nimport \"./Nav.css\";\r\nimport requests from \"./requests\";\r\n\r\nfunction Nav({setSelectedOption}) {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchTrending)}>Trending</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchTopRated)}>Top Rated</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchActionMovies)}>Action</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchComedyMovies)}>Comedy</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchHorrorMovies)}>Horror</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchRomanceMovies)}>Romance</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchMystery)}>Mystery</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchSciFi)}>Sci-fi</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchWestern)}>Western</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchAnimation)}>Animation</h2>\r\n            <h2 onClick={() =>setSelectedOption(requests.fetchTV)}>Movie</h2>\r\n            </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"./VideoCard.css\";\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport {ThumbUpSharp} from \"@material-ui/icons\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst VideoCard = forwardRef(({movie},ref) => {\r\n    return(\r\n        <div className=\"videoCard__container\">\r\n         <div ref={ref} className=\"videoCard\">\r\n        <img src={`${base_url}${movie.backdrop_path || movie.poster_path}`} alt=\"movie poster\"/>\r\n        <TextTruncate\r\n        line={1}\r\n        element=\"p\"\r\n        truncateText=\"...\"\r\n        text={movie.overview} />\r\n        <h2>{movie.title || movie.original_name}</h2>\r\n        <p className='videoCard__stats'>\r\n            {movie.media_type && `${movie.media_type} •`}\r\n            {movie.release_date || movie.first_air_date} •\r\n            <ThumbUpSharp/>{\" \"}\r\n            {movie.vote_count}\r\n            </p>\r\n        </div>   \r\n        </div>\r\n    );\r\n});\r\n\r\nexport default VideoCard\r\n","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;","import React, { useEffect, useState } from 'react';\r\nimport './Results.css';\r\nimport VideoCard from './VideoCard';\r\nimport axios from './axios';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n\r\nfunction Results({selectedOption}) {\r\n    const [movies,setMovies] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        async function fetchData() {\r\n            const request = await axios.get(selectedOption);\r\n            setMovies(request.data.results);\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n    },[selectedOption])\r\n    return(\r\n    <div className=\"results__container\">\r\n    <div className=\"results\">\r\n        <FlipMove>\r\n        {movies.map((movie) =>(\r\n             <VideoCard key={movie.id}  movie={movie}/>\r\n\r\n        ))} \r\n        </FlipMove>    \r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport Nav from './Nav';\r\nimport Results from './Results';\r\nimport requests from './requests';\r\n\r\nfunction App() {\r\n    const [selectedOption,setSelectedOption] = useState(requests.fetchTrending);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n          <Nav setSelectedOption={setSelectedOption} />\r\n   \r\n\r\n        <Results selectedOption = {selectedOption} />\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}